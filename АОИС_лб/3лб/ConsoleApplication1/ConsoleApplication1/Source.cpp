// aoic4.cpp: определяет точку входа для консольного приложения.
//

// ConsoleApplication2.cpp: определяет точку входа для консольного приложения.
//

//#include "stdafx.h"
#include "iostream"
#include "string.h"
#include <cstdlib>
#include "stdio.h"

using namespace std;

class hello
{
public:
	hello()
	{
	}
	hello(string c1, string s1, string s3, int x1, int x2, int x3, int x4, int x5, int x6, int x7, int x8, int i, string s4, string s5)
	{
		c = c1;
		s = s1;
		s2 = s3;
		mas1[0] = x1;
		mas1[1] = x2;
		mas1[2] = x3;
		mas1[3] = x4;
		mas2[0] = x5;
		mas2[1] = x6;
		mas2[2] = x7;
		mas2[3] = x8;
		this->i = i;
		this->s4 = s4;
		this->s5 = s5;
	}
	string getC()
	{
		return c;
	}

	string gets()
	{
		return s;
	}
	string gets3()
	{
		return s2;
	}


public:
	string c, s, s2, s4, s5;
	int mas1[4], mas2[4];
	int i;
};


class proverka
{
public:
	proverka()
	{
		mas[1].s = "-";
		mas[1].s2 = "-";
	};
	hello prov(string c)
	{
		for (int i = 0; i < k; i++)
			if (mas[i].getC() == c)
				return mas[i];
		return mas[0];
	}
	void setMas(hello *h)
	{
		mas[k++] = *h;
	}

	hello mas[100];
	int k = 1;
};

int main()
{
	proverka *pr = new proverka();

	setlocale(LC_ALL,"Russian");

	/*pr->setMas(new hello("!((x1+x2)*!(x1*x3))", "(!x1*!x2*!x3)+(!x1*!x2*x3)+(x1*!x2*x3)+(x1*x2*x3)", "(!x1+!x2+x3)*(x1+x2+x3)*(x1+!x2+!x3)*(x1+!x2+x3)"));
	pr->setMas(new hello("!((!x1+x3)*!(x2*x3))", "(x1*x2*!x3)+(x1*!x2*!x3)+(x1*x2*x3)+(!x1*x2*x3)","(x1+x2+x3)*(x1+!x2+x3)*(x1+x2+!x3)*(!x1+x2+!x3)"));
	pr->setMas(new hello("!((!x1+x2)*!(!x2*!x3))", "--","(x1+!x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)*(x1+x2+!x3)"));*/

	pr->setMas(new hello("!((!x1+!x2)*!(!x1*!x3))", "(x1*x2*x3)+(x1*x2*!x3)+(!x1*x2*x3)+(!x1*!x2*x3)", "(!x1+x2+x3)*(!x1+x2+!x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 0, 2, 6, 7, 1, 3, 4, 5, 163, "(x1*x2)+(!x1*!x3)", "(!x1+x2)*(x1+!x3)"));
	pr->setMas(new hello("!((!x1+!x2)*!(!x1*x3))", "(x1*x2*x3)+(x1*x2*!x3)+(!x1*x2*x3)+(!x1*!x2*x3)", "(!x1+x2+x3)*(!x1+x2+!x3)*(x1+x2+x3)*(x1+!x2+!x3)", 1, 3, 6, 7, 0, 2, 4, 5, 83, "(x1*x2)+(!x1*x3)", "(!x1+x2)*(x1+x3)"));
	pr->setMas(new hello("!((!x1+x2)*!(!x1*!x3))", "(x1*!x2*x3)+(x1*!x2*!x3)+(!x1*x2*!x3)+(!x1*!x2*!x3)", "(!x1+x2+x3)*(!x1+!x2+!x3)*(x1+x2+!x3)*(x1+!x2+x3)", 0, 2, 4, 5, 1, 3, 6, 7, 172, "(x1*!x2)+(!x1*!x3)", "(!x1+!x2)*(x1+!x3)"));
	pr->setMas(new hello("!((!x1+x2)*!(!x1*x3))", "(x1*!x2*x3)+(x1*!x2*!x3)+(!x1*x2*x3)+(!x1*!x2*x3)", "(!x1+!x2+x3)*(!x1+!x2+!x3)*(x1+x2+x3)*(x1+!x2+x3)", 1, 3, 4, 5, 0, 2, 6, 7, 92, "(x1*!x2)+(!x1*x3)", "(!x1+!x2)*(x1+x3)"));
	pr->setMas(new hello("!((x1+!x2)*!(x1*!x3))", "(x1*x2*!x3)+(x1*!x2*!x3)+(!x1*x2*x3)+(!x1*x2*!x3)", "(x1+x2+!x3)*(x1+!x2+!x3)*(x1+x2+x3)*(x1+x2+!x3)", 2, 3, 4, 6, 0, 1, 5, 7, 58, "(x1*!x3)+(!x1*x2)", "(!x1+!x3)*(x1+x2)"));
	pr->setMas(new hello("!((x1+!x2)*!(x1*x3))", "(x1*x2*x3)+(x1*!x2*x3)+(!x1*x2*x3)+(!x1*x2*!x3)", "(!x1+x2+x3)*(!x1+!x2+x3)*(x1+x2+x3)*(x1+x2+!x3)", 2, 3, 5, 7, 0, 1, 4, 6, 53, "(x1*x3)+(!x1*x2)", "(!x1+x3)*(x1+x2)"));
	pr->setMas(new hello("!((x1+x2)*!(x1*!x3))", "(x1*x2*!x3)+(x1*!x2*!x3)+(!x1*!x2*x3)+(!x1*!x2*!x3)", "(!x1+x2+!x3)*(!x1+!x2+!x3)*(x1+!x2+x3)*(x1+!x2+!x3)", 0, 1, 4, 6, 2, 3, 5, 7, 222, "(x1*!x3)+(!x1*!x2)", "(x1+!x3)*(x1+!x2)"));
	pr->setMas(new hello("!((x1+x2)*!(x1*x3))", "(!x1*!x2*!x3)+(!x1*!x2*x3)+(x1*!x2*x3)+(x1*x2*x3)", "(!x1+!x2+x3)*(x1+x2+x3)*(x1+!x2+!x3)*(x1+!x2+x3)", 0, 1, 5, 7, 2, 3, 4, 6, 197, "(x1*x3)+(!x1*!x2)", "(!x1+x3)*(x1+!x2)"));


	//------------------------------------------------------------------------------------------------------------------------------------
	pr->setMas(new hello("!((!x1+!x2)*!(!x2*!x3))", "(x1*!x2*!x3)+(!x1*!x2*!x3)+(x1*x2*!x3)+(x1*x2*x3)", "(x1+x2+!x3)*(!x1+x2+!x3)*(x1+!x2+x3)*(x1+!x2+!x3)", 0, 4, 6, 7, 1, 2, 3, 5, 139, "(!x2*!x3)+(x1*x2)", "(x2+!x3)*(x1+!x2)"));
	pr->setMas(new hello("!((!x1+!x2)*!(!x1*x3))", "(x1*!x2*x3)+(!x1*!x2*x3)+(x1*x2*x3)+(x1*x2*!x3)", "(x1+x2+x3)*(!x1+x2+x3)*(x1+!x2+x3)*(x1+!x2+!x3)", 1, 5, 6, 7, 0, 2, 3, 4, 71, "(!x2*x3)+(x1*x2)", "(x2+x3)*(x1+!x2)"));
	pr->setMas(new hello("!((!x1+x2)*!(x1*!x3))", "(x1*!x2*x3)+(x1*!x2*!x3)+(x1*x2*!x3)+(!x1*x2*!x3)", "(x1+!x2+!x3)*(!x1+!x2+!x3)*(x1+x2+x3)*(x1+x2+!x3)", 2, 4, 5, 6, 0, 1, 3, 7, 46, "(x1*!x2)+(x2*!x3)", "(!x2+!x3)*(x1+x2)"));
	pr->setMas(new hello("!((!x1+x2)*!(x2*x3))", "(x1*!x2*x3)+(x1*!x2*!x3)+(x1*x2*x3)+(!x1*x2*x3)", "(x1+!x2+x3)*(!x1+!x2+x3)*(x1+x2+x3)*(x1+x2+!x3)", 3, 4, 5, 7, 0, 1, 2, 6, 29, "(x1*!x2)+(x2*x3)", "(!x2+x3)*(x1+x2)"));
	pr->setMas(new hello("!((x1+!x2)*!(!x2*!x3))", "(x1*!x2*!x3)+(!x1*!x2*!x3)+(!x1*x2*x3)+(!x1*x2*!x3)", "(x1+x2+!x3)*(!x1+x2+!x3)*(!x1+!x2+x3)*(!x1+!x2+!x3)", 0, 2, 3, 4, 1, 5, 6, 7, 184, "(!x2*!x3)+(!x1*x2)", "(x2+!x3)*(!x1+!x2)"));
	pr->setMas(new hello("!((x1+!x2)*!(!x2*x3))", "(x1*!x2*x3)+(!x1*!x2*x3)+(!x1*x2*x3)+(!x1*x2*!x3)", "(x1+x2+x3)*(!x1+x2+x3)*(!x1+!x2+x3)*(!x1+!x2+!x3)", 1, 2, 3, 5, 0, 4, 6, 7, 116, "(!x2*x3)+(!x1*x2)", "(x2+x3)*(!x1+!x2)"));
	pr->setMas(new hello("!((x1+x2)*!(x2*!x3))", "(x1*x2*!x3)+(!x1*x2*!x3)+(!x1*!x2*x3)+(!x1*!x2*!x3)", "(!x1+x2+x3)*(!x1+x2+!x3)*(x1+!x2+!x3)*(!x1+!x2+!x3)", 0, 1, 2, 6, 1, 4, 5, 7, 228, "(x2*!x3)+(!x1*!x2)", "(!x1+x2)*(!x2+!x3)"));
	pr->setMas(new hello("!((x1+x2)*!(x2*x3))", "(x1*x2*x3)+(!x1*x2*x3)+(!x1*!x2*x3)+(!x1*!x2*!x3)", "(!x1+x2+x3)*(!x1+x2+!x3)*(x1+!x2+x3)*(!x1+!x2+x3)", 0, 1, 3, 7, 2, 4, 5, 6, 209, "(x2*x3)+(!x1*!x2)", "(!x1+x2)*(!x2+x3)"));
	//------------------------------------------------------------------------------------------------------------------------------------

	pr->setMas(new hello("!((!x1+!x2)*!(x2*x3))", "(x1*x2*x3)+(!x1*x2*x3)+(!x1*!x2*x3)+(!x1*!x2*!x3)", "(!x1+x2+!x3)*(!x1+!x2+!x3)*(x1+!x2+x3)*(x1+!x2+x3)", 0, 2, 3, 7, 1, 4, 5, 6, 177, "(x2*x3) + (!x1*!x3)", "(!x1 + x3)*(x2 + !x3)"));
	pr->setMas(new hello("!((!x2+x3)*!(!x1*!x3))", "(x1*x2*!x3)+(!x1*x2*!x3)+(x1*x2*x3)+(x1*!x2*x3)", "(x1+x2+!x3)*(!x1+x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 1, 2, 3, 6, 0, 4, 6, 7, 114, "(x2*!x3) + (!x1*x3)", "(!x1 + !x3)*(x2 + x3)"));
	pr->setMas(new hello("!((x2+!x3)*!(!x1*!x3))", "(x1*!x2*x3)+(!x1*!x2*!x3)+(!x1*x2*!x3)+(!x1*!x2*!x3)", "(!x1+!x2+x3)*(x1+!x2+!x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 0, 1, 2, 3, 3, 4, 6, 7, 228, "(!x2*x3) + (!x1*!x3)", "(!x1 + x3)*(!x2 + !x3)"));
	pr->setMas(new hello("!((x2+x3)*!(!x1*x3))", "(x1*!x2*!x3)+(!x1*!x2*!x3)+(!x1*x2*x3)+(!x1*x2*!x3)", "(x1+x2+!x3)*(!x1+x2+!x3)*(!x1+!x2+x3)*(!x1+!x2+!x3)", 0, 1, 3, 4, 2, 5, 6, 7, 176, "(!x2*!x3) + (!x1*x2)", "(x2 + !x3)*(!x1 + !x2)"));
	pr->setMas(new hello("!((!x2+!x3)*!(x1*!x3))", "(x1*x2*!x3)+(x1*!x2*!x3)+(x1*x2*x3)+(!x1*x2*x3)", "(x1+x2+!x3)*(!x1+x2+!x3)*(x1+x2+x3)*(x1+!x2+x3)", 3, 4, 6, 7, 0, 1, 2, 5, 27, "(x1*!x3) + (x2*x3)", "(x2 + !x3)*(x1 + x3)"));
	pr->setMas(new hello("!((!x2+x3)*!(x1*x3))", "(x1*x2*x3)+(x1*!x2*x3)+(x1*x2*!x3)+(!x1*x2*!x3)", "(x1+x2+x3)*(!x1+x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 2, 5, 6, 7, 0, 1, 3, 4, 39, "(x1*x3) + (x2*!x3)", "(x2 + x3)*(x1 + !x3)"));
	pr->setMas(new hello("!((x2+!x3)*!(x1*!x3))", "(x1*x2*!x3)+(x1*!x2*!x3)+(x1*!x2*x3)+(!x1*!x2*x3)", "(x1+!x2+!x3)*(!x1+!x2+!x3)*(x1+!x2+x3)*(x1+x2+x3)", 1, 4, 5, 6, 0, 2, 3, 7, 78, "(x1*!x3) + (!x2*x3)", "(!x2 + !x3)*(x1 + x3)"));
	pr->setMas(new hello("!((x2+x3)*!(x1*x3))", "(x1*!x2*!x3)+(!x1*!x2*!x3)+(x1*x2*x3)+(x1*!x2*x3)", "(x1+!x2+x3)*(!x1+!x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 0, 4, 5, 7, 1, 2, 3, 6, 141, "(!x2*!x3) + (x1*x3)", "(!x2 + x3)*(x1 + !x3)"));
	//------------------------------------------------------------------------------------------------------------------------------------


	//pr->setMas(new hello("!((x2+x3)*!(x1*x3))", "(x1*!x2*!x3)+(x1*x2*x3)+(!x1*!x2*!x3)+(x1*!x2*x3)", "(!x1+!x2+x3)*(x1+!x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 0, 4, 5, 7, 1, 2, 3, 6, 141, "(x2*x3) + (!x1*!x3)", "(!x1 + x3)*(x2 + !x3)"));
	pr->setMas(new hello("!((!x1+!x3)*!(!x2*!x3))", "(x1*!x2*!x3)+(x1*x2*x3)+(!x1*!x2*!x3)+(x1*!x2*x3)", "(!x1+!x2+x3)*(x1+!x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 0, 4, 5, 7, 1, 2, 3, 6, 141, "(!x2*!x3) + (x1*x3)", "(!x2 + x3)*(x1 + !x3)"));
	pr->setMas(new hello("!((!x1+x3)*!(!x2*x3))", "(x1*x2*!x3)+(x1*!x2*!x3)+(x1*!x2*x3)+(!x1*!x2*x3)", "(x1+!x2+!x3)*(!x1+!x2+!x3)*(x1+x2+x3)*(x1+!x2+x3)", 1, 4, 5, 6, 0, 2, 3, 7, 78, "(x1*!x3) + (!x2*x3)", "(!x2 + !x3)*(x1 + x3)"));
	pr->setMas(new hello("!((!x1+!x3)*!(x2*!x3))", "(x1*x2*x3)+(x1*!x2*x3)+(x1*x2*!x3)+(!x1*x2*!x3)", "(x1+x2+x3)*(!x1+x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 2, 5, 6, 7, 0, 1, 3, 4, 39, "(x1*x3) + (x2*!x3)", "(x2 + x3)*(x1 + !x3)"));
	pr->setMas(new hello("!((!x1+x3)*!(x2*x3))", "(x1*x2*x3)+(x1*x2*!x3)+(!x1*x2*x3)", "(x1+x2+!x3)*(!x1+x2+!x3)*(x1+!x2+!x3)", 3, 4, 6, 7, 0, 1, 2, 5, 27, "(x1*x2) + (x2*x3)", "(x2 + !x3)*(x1 + x3)"));
	pr->setMas(new hello("!((x1+!x3)*!(!x2*!x3))", "(x1*!x2*!x3)+(!x1+x2+x3)+(x1+!x2+x3)", "(!x1+x2+!x3)*(!x1+!x2+!x3)*(x1+!x2+x3)*(!x1+!x2+x3)", 0, 1, 3, 4, 2, 5, 6, 7, 216, "(!x2*!x3) + (!x1*x3)", "(!x1 + !x3)*(!x2 + x3)"));
	pr->setMas(new hello("!((x1+x3)*!(!x2*x3))", "(x1*!x2*!x3)+(x1*x2*x3)+(!x1*!x2*!x3)+(x1*!x2*x3)", "(!x1+!x2+x3)*(x1+!x2+x3)*(x1+x2+!x3)*(x1+!x2+!x3)", 0, 1, 2, 5, 3, 4, 6, 7, 228, "(!x2*x3) + (!x1*!x3)", "(!x1 + x3)*(!x2 + !x3)"));


	char mas[100];

	while ((*mas) != 'q')
	{
		cout << "Введите функцию:" << endl;
		cin >> mas;
		hello h = pr->prov(mas);
		cout << "Fсднф: " << h.gets().c_str() << endl;
		cout << "Fскнф: " << h.gets3().c_str() << endl;
		cout << "Fiсднф:" << endl;
		for (int i = 0; i < 4; i++)
			cout << h.mas1[i] << ' ';
		cout << endl;
		cout << "Fiскнф:" << endl;
		for (int i = 0; i < 4; i++)
			cout << h.mas2[i] << ' ';
		cout << endl;
		cout << "i:" << h.i << endl;
		cout << "Fтднф" << endl;
		cout << h.s4.c_str() << endl;
		cout << "Fткнф" << endl;
		cout << h.s5.c_str() << endl;
		system("pause");
		system("cls");

	}

	return 0;
}
